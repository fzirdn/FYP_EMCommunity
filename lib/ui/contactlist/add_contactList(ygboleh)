import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:emcommunity_fyp/models/user_model.dart';
import 'package:emcommunity_fyp/ui/contactlist_ui.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';

class AddContactPage extends StatefulWidget {
  AddContactPage({Key? key}) : super(key: key);

  @override
  _AddContactPageState createState() => _AddContactPageState();
}

class _AddContactPageState extends State<AddContactPage> {

  //form Key
  final _formKey = GlobalKey<FormState>();

  //text controller
  final TextEditingController _nameController = new TextEditingController();
  final TextEditingController _numberController = new TextEditingController();

  // firebase 
  final _auth = FirebaseAuth.instance;

  //Name Field

  //String _typeSelected = '';

  //FirebaseDatabase _ref = FirebaseDatabase.instance.ref().child('Contacts');

  //DatabaseReference _ref = FirebaseDatabase.instance.ref().child('Contacts');
   
  /*Widget _buildContactType(String title){
    return InkWell(
      child: Container(
        height: 40,
        width: 90,

        decoration: BoxDecoration(
          color: _typeSelected == title? Colors.orange : Theme.of(context).accentColor,
          borderRadius: BorderRadius.circular(15),
        ),

        child: Center(child: Text(title, style: TextStyle(fontSize: 18, color: Colors.white),),),
      ),

      onTap: (){
        setState(() {
                  _typeSelected = title;
                });
      },
    );
  }*/

  //save contact button
  /*final saveButton = Material(
      elevation: 5,
      borderRadius: BorderRadius.circular(30),
      color: Colors.redAccent,
      child: MaterialButton(
        padding: EdgeInsets.fromLTRB(20, 15, 20, 15),
        onPressed: (){
          saveContactList();
        },
        child: Text(
          "Save Contact",
          textAlign: TextAlign.center,
          style: TextStyle(
            fontSize: 20, color: Colors.white, fontWeight: FontWeight.bold,
          ),
        ),
    ));*/

  @override
  Widget build(BuildContext context) {

    //final name 
    final nameField = TextFormField(
      autofocus: false,
      controller: _nameController,
      keyboardType: TextInputType.text,
      validator: (value){
        RegExp regex = new RegExp(r'^.{10,}$');
        if(value!.isEmpty){
          return ("Name cannot be Empty");
        }
        if(!regex.hasMatch(value)){
          return ("Please Enter Name");
        }
        return null;
      },
      onSaved: (value) {

        _nameController.text = value!;//value!

      },//onSaved
      textInputAction: TextInputAction.next,
      decoration: InputDecoration(
        prefixIcon: Icon(Icons.account_circle),
        contentPadding: EdgeInsets.fromLTRB(20, 15, 20, 15),
        hintText: "Name",
        border: OutlineInputBorder(
          borderRadius: BorderRadius.circular(10),
        ),
      ),
    );

    //phone Number
    final phoneNumField = TextFormField(
      autofocus: false,
      controller: _numberController,
      keyboardType: TextInputType.text,
      validator: (value){
        RegExp regex = new RegExp(r'^.{10,}$');
        if(value!.isEmpty){
          return ("Phone Number cannot be Empty");
        }
        if(!regex.hasMatch(value)){
          return ("Please Enter Valid Phone Number(Min. 10 Character)");
        }
        return null;
      },
      onSaved: (value) {

        _numberController.text = value!;//value!

      },//onSaved
      textInputAction: TextInputAction.next,
      decoration: InputDecoration(
        prefixIcon: Icon(Icons.phone_android_sharp),
        contentPadding: EdgeInsets.fromLTRB(20, 15, 20, 15),
        hintText: "Phone Number",
        border: OutlineInputBorder(
          borderRadius: BorderRadius.circular(10),
        ),
      ),
    );

    //save button
    final saveButton = Material(
      elevation: 5,
      borderRadius: BorderRadius.circular(30),
      color: Colors.redAccent,
      child: MaterialButton(
        padding: EdgeInsets.fromLTRB(20, 15, 20, 15),
        minWidth: MediaQuery.of(context).size.width,
        onPressed: (){
          saveContact();
        },
        child: Text(
          "Save",
          textAlign: TextAlign.center,
          style: TextStyle(
            fontSize: 20, color: Colors.white, fontWeight: FontWeight.bold,
          ),
        ),
    ));


    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: Text("Save New Emergency Contact"),
        backgroundColor: Colors.transparent,
        elevation: 0,
        leading: IconButton(
          icon: Icon(Icons.arrow_back), 
          color: Colors.red,
          onPressed: (){
            Navigator.push(context, MaterialPageRoute(builder: (context) => ContactListPage()));
          }),
      ),

      body: Center(
        child: SingleChildScrollView(
          child: Container(
            color: Colors.white,
            child: Padding(
              padding: const EdgeInsets.all(36.0),
              child: Form(
                key: _formKey,
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  crossAxisAlignment: CrossAxisAlignment.center,
                  children: <Widget>[
                    
                    nameField,
                    SizedBox(height: 15),

                    phoneNumField,
                    SizedBox(height: 15),

                    saveButton,
                    SizedBox(height: 15),
                  ],
                ),
              ),
            ),
          ),
        ),
      )

      
      
      
      /*body: Container(
        margin: EdgeInsets.all(15),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [

            //textform for name
            TextFormField(
              controller: _nameController,
              decoration: InputDecoration(
                hintText: 'Enter Name',
                prefixIcon: Icon(Icons.account_balance_rounded, size: 30,),
                fillColor: Colors.black,
                filled: true,
                contentPadding: EdgeInsets.all(15),
              ),
            ),

            SizedBox(height: 15),

            //textform for number contact
            TextFormField(
              controller: _numberController,
              decoration: InputDecoration(
                hintText: 'Enter Contact Number',
                prefixIcon: Icon(Icons.phone_iphone, size: 30,),
                fillColor: Colors.black,
                filled: true,
                contentPadding: EdgeInsets.all(15),
              ),
            ),

            SizedBox(height: 15),

            //family, friends and more
            Container(
              height: 40,
              child: ListView(
                scrollDirection: Axis.horizontal,
                children: [
                  _buildContactType('Family'),
                  SizedBox(width: 10),
                  _buildContactType('Friends'),
                  SizedBox(width: 10),
                  _buildContactType('Work'),
                  SizedBox(width: 10),
                ],
              ),
            ),

            //save contact button
            //saveButton,
            SizedBox(height: 25),
            Container(
              width: double.infinity,
              padding: EdgeInsets.symmetric(horizontal: 10),
              child: Material(
                elevation: 5,
                borderRadius: BorderRadius.circular(30),
                color: Colors.redAccent,
                child: MaterialButton(
                padding: EdgeInsets.fromLTRB(20, 15, 20, 15),
                onPressed: (){
                  saveContactList();
                  },
                  child: Text(
                    "Save Contact",
                    textAlign: TextAlign.center,
                    style: TextStyle(
                      fontSize: 20, color: Colors.white, fontWeight: FontWeight.bold,),
                  ),
                ),
              ),
            ),
          ],
        ),
      ),*/
    );
  }

  void saveContact() async {

    FirebaseFirestore firebaseFirestore = FirebaseFirestore.instance;
    User? user = _auth.currentUser;
    
    UserContact userContact = UserContact();

    //writing all the values
    userContact.uid = user!.uid;
    userContact.name = _nameController.text;
    userContact.phoneNum = _numberController.text;

    await firebaseFirestore
     .collection("contacts")
     .doc(user.uid)
     .set(userContact.toMap());

    Navigator.pushAndRemoveUntil(context, 
    MaterialPageRoute(builder: (context) => ContactListPage()), 
    (route) => false);
    

  }

  /*void saveContactList(){

    String name = _nameController.text;
    String number = _numberController.text;

    Map<String,String> contact = {
      'name' : name,
      'number': number,
      'type': _typeSelected,

    };

    _ref.push().set(contact).then((value) {
      Navigator.pop(context);
    });

  }*/
}
